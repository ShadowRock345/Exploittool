import os
import scapy.layers.dot11
from sys import platform
import utils.modulemanager as md
from scapy.all import *
from scapy.layers.dot11 import *
import pandas
import time
import os
from faker import Faker
from utils import checklibraries
from py_console import console, bgColor, textColor


class Main(md.Module):
    """Module for creating a Fake accespoint"""
    parameters = {"device": "wlan0", "device_monitor": "wlan0mon", "ssid": "Test","amount":"1"}
    completions = list(parameters.keys())

    def sendbeacon(self,interface,ssid,mac,infinite=True):
        broadcast = "ff:ff:ff:ff:ff:ff"
        bssid = mac

        pkt = RadioTap() / Dot11(addr1=broadcast, addr2=bssid, addr3=bssid) / Dot11Beacon(cap=0x1104) / Dot11Elt(ID=0, info=ssid) / Dot11Elt(ID=1, info="\x82\x84\x8b\x96\x24\x30\x48\x6c") / Dot11Elt(ID=3, info="\x0b") / Dot11Elt(ID=5,info="\x00\x01\x00\x00")
        sendp(pkt, iface=interface, count=0.1, loop=1)

    def do_exploit(self, line):
        console.log("Putting network Adapter into monitoring mode.")
        console.log("\n")
        os.system("airmon-ng check kill")
        os.system("sudo ifconfig wlan0 down")
        os.system("sudo iwconfig wlan0 mode monitor")
        os.system("sudo ifconfig wlan0 up")
        # os.system("airmon-ng start " + self.parameters['device'])
        # os.system("iwconfig")
        console.log("\n")
        try:
            interface = str(self.parameters['device_monitor'])
            faker = Faker()
            ssids_macs = [(faker.name(), faker.mac_address()) for i in range(int(self.parameters['amount']))]
            for ssid, mac in ssids_macs:
                Thread(target=self.sendbeacon, args=(interface,ssid, mac,)).start()
        except KeyboardInterrupt:
            console.info("Stopping Sniffing WLAN")

    def complete_set(self, text, line, begidx, endidx):
        splitline = line.partition(' ')[2]
        offs = len(splitline) - len(text)
        return [s[offs:] for s in self.completions if s.startswith(splitline)]
