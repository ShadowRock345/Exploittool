import os
import scapy.layers.dot11
from sys import platform
import utils.modulemanager as md
from scapy.all import *
from scapy.layers.dot11 import *
import pandas
import time
import os
from utils import checklibraries
from py_console import console, bgColor, textColor


class Main(md.Module):
    """Module for scanning for Requests in Network"""
    parameters = {"device_name": "wlan0", "count": "100"}
    completions = list(parameters.keys())
    global devices
    def packet_handler(self, pkt):
        if pkt.haslayer(Dot11):
            layer = pkt.getlayer(Dot11)

        if layer.addr2 and (layer.addr2 not in self.devices):
            self.devices.add(layer.addr2)
            print(len(self.devices), layer.addr2, layer.payload.name)

    def do_exploit(self, line):
        console.log("Starting Sniffer...")
        console.log("\n")
        self.devices = set()
        try:
            sniff(iface=str(self.parameters['device_name']), count=int(self.parameters['count']), prn=self.packet_handler)

        except KeyboardInterrupt:
            console.info("Stopping Sniffing WLAN")

    def complete_set(self, text, line, begidx, endidx):
        splitline = line.partition(' ')[2]
        offs = len(splitline) - len(text)
        return [s[offs:] for s in self.completions if s.startswith(splitline)]
