import os
import pkgutil
import sys
sys.path.insert(0,"C:\\Users\\Jonas\\Documents\\python\\exploit")
from py_console import console, bgColor, textColor

__all__ = list(
  module for _, module, _ in pkgutil.iter_modules([os.path.dirname(__file__)]))

#__all__.remove('basic')

# for root, dirs, files in os.walk("modules/"):
#   for dirname in dirs:
#     if os.path.join(dirname) != "pycache":
#       dirs = os.listdir(
#         str(os.getcwd()) + "/" + str(os.path.join(root, dirname)))
#       #os.chdir(str(os.getcwd())+"/"+str(os.path.join(root,dirname)))
#       for name in dirs:
#         if name != "pycache":
#           all.append(
#             os.path.join(dirname)+ "/" +os.path.splitext(name)[0])  #+ "/" +os.path.splitext(name)[0]

def get_all_modules():
  #print(os.getcwd())
  console.success(f"{'Modules':<20}\t{'Description':<20}")
  console.success(f"{'--'*10}\t{'--'*13}")
  for module in __all__:
    try:

      loaded_module = globals()[module].Main()
      console.success(f"{module:<20}\t{loaded_module.__doc__}")
    except AttributeError:
      console.error(
        f"**** Modue `{module}` is destroyed! (Unable to load) ****")
    print("\n")


def module_list():
  return __all__
