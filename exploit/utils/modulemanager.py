import cmd
import sys
import os
from py_console import console as cn, bgColor, textColor

completions = ['ip']


class Module(cmd.Cmd):
  parameters = {}

  def do_exploit(self):

    pass

  def do_exitmodule(self, *args):

    return True

  def do_exit(self, line):

    sys.exit(0)

  def do_set(self, line):

    try:
      key, value = line.split(' ')
      print(key, value)
      self.parameters.update({key: value})
    except KeyError:

      cn.warn("**** Unknown Option! ****")
    except ValueError:

      cn.warn("**** Option not has value! ****")

  def do_options(self, line):

    print("\n")
    cn.success(f"{'Option':20}\t{'Value':20}")
    cn.success(f"{'--'*8:<20}\t{'--'*8:<20}")
    for k, v in self.parameters.items():
      cn.warn(f"{k:20}\t{v:20}")
    print("\n")

  def complete_set(self, text, line, begidx, endidx):
    mline = line.partition(' ')[2]
    offs = len(mline) - len(text)
    return [s[offs:] for s in self.completions if s.startswith(mline)]

  def default(self, line):
    cmd, arg, line = self.parseline(line)
    func = [
      getattr(self, n) for n in self.get_names() if n.startswith('do_' + cmd)
    ]
    if func:
      func[0](arg)
    else:
      os.system(line)
